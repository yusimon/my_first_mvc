@model AuthWithDB.Models.Content
@{
    ViewBag.Title = "Edit content";
}

<script src="~/ckeditor/ckeditor.js"></script>
<script src="~/ckeditor/adapters/jquery.js"></script>

<h2>Edit the content</h2>

<script type="text/javascript">
    function fileCheck(obj) {
        var fileExtension = ['jpeg', 'jpg', 'png', 'gif', 'bmp'];
        if ($.inArray($(obj).val().split('.').pop().toLowerCase(), fileExtension) == -1) {
            alert("Only '.jpeg','.jpg', '.png', '.gif', '.bmp' formats are allowed.");
        }
    }
</script>

<script language="javascript">
    function FCKeditor_OnComplete(editorInstance)
    {
        editorInstance.Events.AttachEvent('OnAfterLinkedFieldUpdate',escapeValue)
    }
    function escapeValue(editorInstance)
    {
        editorInstance.LinkedField.value = escape(editorInstance.LinkedField.value);
    }
</script>

@using (Html.BeginForm("Edit", "Content", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true)

        <div class="form-group">
            @Html.LabelFor(model => model.Title, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Title, new { @class = "form-control", placeholder = "Content Title" })
                @Html.ValidationMessageFor(model => model.Title)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control", placeholder = "Content Description" })
                @Html.ValidationMessageFor(model => model.Description)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Contents, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Contents, new { @class = "ckeditor", placeholder = "Content" })
                @Html.ValidationMessageFor(model => model.Contents)
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Image, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <img src="/Content/RetrieveImage/@Html.DisplayFor(c => c.ID)" width="150" height="100" />
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-2">&nbsp;</div>
            <div class="col-md-10">
                <input type="file" name="ImageData" id="ImageData" onchange="fileCheck(this);" />
                @Html.ValidationMessageFor(model => model.Image)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Edit" class="btn btn-default" />
            </div>
        </div>
    </div>
        
}
